//
//  DetailItemPresenterTests.swift
//  ShopTest
//
//  Created by david cortes on 19/01/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import ShopTest
import XCTest

class DetailItemPresenterTests: XCTestCase{
    // MARK: Subject under test
    
    var sut: DetailItemPresenter!
    
    // MARK: Test lifecycle
    
    override func setUp(){
        super.setUp()
        setupDetailItemPresenter()
    }
    
    override func tearDown(){
        sut = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupDetailItemPresenter(){
        sut = DetailItemPresenter()
    }
    
    // MARK: Test doubles
    
    class DetailItemDisplayLogicSpy: DetailItemDisplayLogic{
        var displayInitialInformationCalled = false
        
        func displayInitialInformation(viewModel: DetailItem.LoadInitalData.ViewModel){
            displayInitialInformationCalled = true
        }
    }
    
    // MARK: Tests
    
    func testDetailItemPresenter_WhenDisplayInitialInformationIsCalled(){
        // Given
        let spy = DetailItemDisplayLogicSpy()
        sut.viewController = spy
        guard let resultSearch = Seeds.items.resulstSearch.first else{
            XCTFail("Json is empty")
            return
        }
        let response = DetailItem.LoadInitalData.Response(resultSearch: resultSearch)
        
        // When
        sut.presentInitialInformation(response: response)
        
        // Then
        XCTAssertTrue(spy.displayInitialInformationCalled, "presentSomething(response:) should ask the view controller to display the result")
    }
}
