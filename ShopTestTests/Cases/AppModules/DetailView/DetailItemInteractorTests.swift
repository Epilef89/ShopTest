//
//  DetailItemInteractorTests.swift
//  ShopTest
//
//  Created by david cortes on 19/01/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import ShopTest
import XCTest

class DetailItemInteractorTests: XCTestCase{
    // MARK: Subject under test
    
    var sut: DetailItemInteractor!
    
    // MARK: Test lifecycle
    
    override func setUp(){
        super.setUp()
        setupDetailItemInteractor()
    }
    
    override func tearDown(){
        sut = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupDetailItemInteractor(){
        sut = DetailItemInteractor()
    }
    
    // MARK: Test doubles
    
    class DetailItemPresentationLogicSpy: DetailItemPresentationLogic{
        var presentInitialInformationCalled = false
        
        func presentInitialInformation(response: DetailItem.LoadInitalData.Response){
            presentInitialInformationCalled = true
        }
    }
    
    
    // MARK: Tests
    
    func testDetailItemPresenter_WhenPresentInitialInformation(){
        // Given
        let spy = DetailItemPresentationLogicSpy()
        sut.presenter = spy
        let request = DetailItem.LoadInitalData.Request()
        guard let resultSearch = Seeds.items.resulstSearch.first else{
            XCTFail("Json is empty")
            return
        }
        
        // When
        sut.resultSearch = resultSearch
        sut.loadInitialInformation(request: request)
        
        // Then
        XCTAssertTrue(spy.presentInitialInformationCalled, "loadInitialInformation(request:) should ask the presenter to format the result")
    }
}
